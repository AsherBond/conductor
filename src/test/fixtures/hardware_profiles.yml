# == Schema Information
# Schema version: 20110207110131
#
# Table name: hardware_profiles
#
#  id              :integer         not null, primary key
#  external_key    :string(255)
#  name            :string(1024)    not null
#  memory_id       :integer
#  storage_id      :integer
#  cpu_id          :integer
#  architecture_id :integer
#  provider_id     :integer
#  lock_version    :integer         default(0)
#  created_at      :datetime
#  updated_at      :datetime
#

# Read about fixtures at http://ar.rubyonrails.org/classes/Fixtures.html

m1_small_backend:
  external_key: m1-small
  name: m1-small
  memory: 1.7
  storage: 160
  architecture: i386
  provider: mock_provider
m1_large_backend:
  external_key: m1-large
  name: m1-large
  memory: 7.5
  storage: 850
  architecture: x86_64
  provider: mock_provider
m1_xlarge_backend:
  external_key: m1-xlarge
  name: m1-xlarge
  memory: 15
  storage: 1690
  architecture: x86_64
  provider: mock_provider
c1_medium_backend:
  external_key: c1-medium
  name: c1-medium
  memory: 1.7
  storage: 350
  architecture: x86_64
  provider: mock_provider
c1_xlarge_backend:
  external_key: c1-xlarge
  name: c1-xlarge
  memory: 7
  storage: 1690
  architecture: x86_64
  provider: mock_provider
m1_small_frontend:
  external_key: m1-small
  name: m1-small
  memory: 1.7
  storage: 160
  architecture: i386
  provider_hardware_profiles: m1_small_backend
m1_large_frontend:
  external_key: m1-large
  name: m1-large
  memory: 7.5
  storage: 850
  architecture: x86_64
  provider_hardware_profiles: m1_large_backend
m1_xlarge_frontend:
  external_key: m1-xlarge
  name: m1-xlarge
  memory: 15
  storage: 1690
  architecture: x86_64
  provider_hardware_profiles: m1_xlarge_backend
c1_medium_frontend:
  external_key: c1-medium
  name: c1-medium
  memory: 1.7
  storage: 350
  architecture: x86_64
  provider_hardware_profiles: c1_medium_backend
c1_xlarge_frontend:
  external_key: c1-xlarge
  name: c1-xlarge
  memory: 7
  storage: 1690
  architecture: x86_64
  provider_hardware_profiles: c1_xlarge_backend
