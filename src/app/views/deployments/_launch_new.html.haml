= if request.xhr?
  = render :partial => '/layouts/new_notification'
%header.page-header
  %h1.deployments
    =t 'deployments.new_deployment'
    %span= t('deployments.launch_new.to_pool', :name => "#{@pool.name.capitalize}")
  #obj_actions.button-container
    = link_to t('cancel'), pool_path(@pool), :class => 'button danger', :id => 'cancel_deployment_button'
  .corner &nbsp;

%section.content-section.deployment
  %header
    %h2
      = t 'deployments.deployment_details'

  .content
    = form_for :deployment, {:url => launch_time_params_deployments_path, :method => :post, :html => {:class => 'generic'}} do
      - if @deployment.errors.any?
        = render 'layouts/error_messages', :object => @deployment
      = hidden_field :deployment, :pool_id
      %fieldset
        %p
          %label{:for => 'deployment_name'}
            = t 'deployments.deployment_name'
            %span
              = t 'deployments.deployment_name_subtext'
          = text_field(:deployment, :name, :class => 'em long')
          %span#name_avail_indicator

      %fieldset
        %p
          %label{:for => 'catalog_entry_id'}
            = t('catalog_entries.index.catalog_entry')
          = select_tag :catalog_entry_id, options_for_select([[t('.load_definition'), t('.other')]] + @catalog_entries.map {|d| [d.name, d.id]}, params[:catalog_entry_id])
        %p#deployable-url-section
          %label{:for => 'deployable_url'}
            = t('deployables.index.deployable_url')
            %span
              = t('deployables.index.deployable_url_subtext')
          = text_field_tag :deployable_url, params[:deployable_url], :class => 'long'

      %fieldset
        %p
          %label{:for => 'frontend_realm_id'}
            = t('realms.index.realm')
          = select :deployment, :frontend_realm_id, @realms.map{|r| [r.name, r.id]}, :include_blank => true

      %fieldset.options
        = submit_tag t('.next'), :class => 'button', :id => "next_button"


:javascript
  // FIXME: This has a theoretical race condition: if responses come back out of order, the value
  // might reflect some previous entry and tell you a name is available when it's not.
  // Might be nice to build something in application.js to guard against this, and that also
  // introduces a ~250ms buffer so we don't do a lookup on every single keystroke...
  $(document).ready(function () {
    $('#catalog_entry_id').change(function(){
      if($(this).val() !== 'other'){
        $('#deployable-url-section').hide();
      }else{
        $('#deployable-url-section').show();
      }
    });
    $('#deployment_name').blur(function(e) {
      e.preventDefault();
      $.get('#{check_name_deployments_path}', {name: $('#deployment_name').val() }, function(data) {
        $('#name_avail_indicator').html(data == "false" ? "#{t'deployments.launch_new.already_in_use'}" : "#{t'deployments.launch_new.name_available'}");
      });
    });
  });
