= render :partial => 'layouts/nav_history'
%header.page-header
  %h1.deployments
    = [@deployment.pool.name, "Pool"].join(' ')
  .corner &nbsp;

%section.content-section.deployments.launch-time-params
  %h2= t('.configure_launch_time_params')
  = form_for @deployment, :url => overview_deployments_path, :html => {:method => :post, :class => 'generic'} do
    = hidden_field :deployment, :name
    = hidden_field :deployment, :pool_id
    = hidden_field :deployment, :frontend_realm_id
    = hidden_field_tag :deployable_id, params[:deployable_id]

    %section.services
      %header
        %h3.service
        %p.description

      - @services.each do |service, assembly_name|
        %h4.service= service.name.titleize
        %p.hidden.description= service.description

        .parameters
          - service.parameters.each do |parameter|
            .parameter
              - if not parameter.reference?
                - id = "deployment[launch_parameters][#{assembly_name}][#{service.name}][#{parameter.name}]"
                = label_tag id, parameter.name.titleize + ':'
                - value = get_hash_multi(params, [:deployment, :launch_parameters, assembly_name, service.name, parameter.name])
                = text_field_tag id, (parameter.value or value)
              - else
                = t('.reference', :assembly => parameter.reference_assembly, :parameter => parameter.reference_parameter)

      #service-headers

    = submit_tag t('.finalize'), :class => 'button primary', :id => 'submit_params'

:javascript
  (function () {
    function selectService($service) {
      $('.service.selected').next().next('.parameters').hide();
      $('.service.selected').removeClass('selected');
      $service.addClass('selected');
      $service.next().next('.parameters').show();

      $service.parents('.services').find('header .service').text($service.text());
      $service.parents('.services').find('header .description')
          .text($service.next('.description').text());
    }

    function checkEnteredParams() {
      $('.launch-time-params .parameters').each(function() {
        var $parameters = $(this).find('.parameter input');
        var filledOut = _.all($parameters, function(item) {
          return ! _.isEmpty($(item).val());
        });
        $(this).prev().prev('.service').toggleClass('filled-out', filledOut);
        $('#submit_params').attr('disabled', !filledOut);
      });
    }

    var $services = $('.launch-time-params .services h4.service');
    selectService($services.first());
    $services.live('click', function(e) { selectService($(this)); });

    $('#submit_params').attr('disabled', true);
    $('.parameter input').live('keydown', function(e) {
      checkEnteredParams();
    });
    checkEnteredParams();
  })();
