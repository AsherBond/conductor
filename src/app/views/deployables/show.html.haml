= render :partial => 'layouts/admin_nav'
%header.admin-page-header
  %h1{:class => controller.controller_name}= @deployable.name
  #obj_actions.button-container
    .button-group
      = button_to t('catalog_entries.show.delete'), catalog_deployable_path(@catalog, @deployable), :method => 'delete', :confirm => "#{t'catalog_entries.show.confirm_delete'}", :class => 'button danger', :id => 'delete'
      = link_to t('catalog_entries.show.edit'), edit_catalog_deployable_path(@catalog, @deployable), :class => 'button', :id => 'edit_button'

    = link_to t('deployments.overview.launch'), launch_new_deployments_path(:deployable_id => @deployable.id, :pool_id => @catalog.pool), :id => :launch_deployment

%section.admin-content-section
  %header
    %h2.users= t('.images')
  .content
    .centered
      %table.light_table
        %thead
          %tr
            %th
            %th
              %strong=t'.name'
            %th=t'.hwp_profile'
            %th.align-center=t'.hdd'
            %th.align-center=t'.ram'
            %th.align-center=t'.arch'
        %tbody
          - @images_details.each do |assembly|
            %tr
              %td= image_ready?(assembly)
              - if assembly.has_key?(:name)
                %td
                  %strong=assembly[:name]
              -else
                %td=assembly[:error_name]
              -if assembly.has_key?(:hwp_name)
                %td=assembly[:hwp_name]
                %td.align-center=assembly[:hwp_hdd]
                %td.align-center=assembly[:hwp_ram]
                %td.align-center=assembly[:hwp_arch]
              -else
                %td{:colspan => 4}= assembly[:error_hwp]

%section.admin-content-section
  - if @missing_images.empty?
    %header
      %h2= t('.build')
      .section-controls
        = form_tag(catalog_deployable_build_path(@catalog, @deployable)) do
          = select_tag :build_options, options_for_select([[t(".build_missing"), :build_missing], [t(".push_missing"), :push_missing]])
          = submit_tag t('.start'), :id => :start_build, :class => 'button pill'
    .content
      %p.description.align-center= t('.build_description')

      %ul#providers-list.catalog_pretty
        - @build_results.each do |provider_type, results|
          - results.each do |result|
            %li
              .summary
                .info
                  %h2= provider_type
                  %span= result[:provider]
                  |
                  %span= result[:account]
                .controls
                  .build_status
                    %span= t("catalog_entries.build_statuses_descriptions.#{result[:status]}")
                    %div{:class => "build_status_icon #{result[:status]}"}
  - else
    %header
      %h2= t('.build')
    .content
      %h3= t('.missing_images')
      %ul#missing-images-list
        - @missing_images.each do |uuid|
          %li= uuid

%section.admin-content-section
  %header
    %h2= t('.catalogs')
    .section-controls
      = form_for(:catalog_entry, :url => catalog_entries_path) do |f|
        = f.label :catalog_id, t('catalog_entries.show.choose_catalog')
        = f.select :catalog_id, options_for_select(@catalogs_options.map {|c| [c.name, c.id]})
        = f.hidden_field(:deployable_id, :value => @deployable.id)
        = f.submit t('catalog_entries.show.add_catalog'), :id => :add_catalog, :class => 'button pill', :disabled => @catalogs_options.empty?
  .content
    .centered
      %table.light_table
        %tr
          %th
          %th
            %label
              %strong= t('.catalog_name')
          %th
            %label
              %strong= t('.environment')
        - @deployable.catalog_entries.each do |catalog_entry|
          %tr
            %td= button_to t('catalog_entries.show.delete'), catalog_entry_path(catalog_entry), :method => 'delete', :confirm => "#{t'catalog_entries.show.confirm_delete'}", :id => 'delete'
            %td= catalog_entry.catalog.name
            %td= catalog_entry.catalog.pool.pool_family.name

- if check_privilege(Privilege::PERM_VIEW,@permission_object)
  %section.admin-content-section
    %header
      %h2.roles= t('users.users')
    .content
      = render :partial => 'permissions/permissions'
