:javascript
  $(document).ready(function() {
    var $metagrouppackages = $('#metagrouppackages');
    $('.metagroups input[name="show_metagroup"]').click(function(e) {
      e.preventDefault();
      var data = {
        'show_metagroup': e.currentTarget.value,
        'repository': $("select[name='tpl[platform]']").val(),
        'packages[]':  $("input:text[name='packages[]']").map(function() {return $(this).val()}).get()
      };
      var url = '#{url_for :action => 'dispatch', :id => @id}';
      $metagrouppackages.load(url, data, function() {
        $('#do_add_software').click(function(e) {
          e.preventDefault();
          var url = '#{url_for :action => 'managed_content'}';
          var new_pkgs = $("input:checked[name='packages[]']").map(function() {return $(this).val()}).get();
          var old_pkgs =  $("input:text[name='packages[]']").map(function() {return $(this).val()}).get()
          var data = {
            'selected_packages[]': old_pkgs.concat(new_pkgs),
            'selected_groups[]': $("input:checked[name='groups[]']").map(function() {return $(this).val()}).get(),
            'template_id'  : '#{@id.nil? ? nil : @id}'
          };
          $('#managed_content').load(url, data, function(){
            $('#package_selection_list').empty().show();
            $('#add_software_button').show();
            $('.remove_package').click(function() { $(this).parent().parent().remove(); });
          });
        });
        $('#cancel_add_software').click(function(e) {
          e.preventDefault();
          $('#package_selection_list').hide();
          $('#add_software_button').show();
        });
      });
    });
  });

.grid_16
  %h3 Managed Content Selection

  - form_tag :action => "dispatch" do
    - unless @embed
      = render :partial => 'hidden_fields'
    - @packages.each do |p|
      <input type="hidden" id="selected_package_#{p[:name]}" name="selected_packages[]" value="#{p[:name]}" />
    %fieldset.clearfix
      .search.grid_4.alpha
        %input{:type => "search", :placeholder => "Search for package", :name => 'package_search', :value => params[:package_search]}
        %button.action
      .grid_8
      %a.grid_4.omega Advanced Search

    %ul.metagroups{:class => 'packagegroupsidebar grid_4 alpha'}
      %li
        = submit_tag 'Collections', :name => 'show_metagroup', :id => 'collections', :class => 'icon'
      - @metagroups.keys.sort.each do |cat|
        %li
          = submit_tag cat, :name => "show_metagroup", :class => 'icon'
    #metagrouppackages.grid_12.omega.gap
      - if @collections
        = render :partial => 'collections'
      - elsif @searched_packages
        = render :partial => 'searched_packages'
      - else
        = render :partial => 'metagroup_packages'
