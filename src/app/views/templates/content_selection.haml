:javascript
  $(document).ready(function() {
    var $metagrouppackages = $('#metagrouppackages');
    $('.metagroups input[name="show_metagroup"]').click(function(e) {
      e.preventDefault();
      var data = {
        'show_metagroup': e.currentTarget.value,
        'repository': $("select[name='tpl[platform]']").val(),
        'packages[]':  $("input:hidden[name='packages[]']").map(function() {return $(this).val()}).get()
      };
      var url = '#{url_for :action => 'dispatch', :id => @id}';
      $metagrouppackages.empty().addClass('loading');
      $metagrouppackages.load(url, data, function() {
        $metagrouppackages.removeClass('loading');
        Aggregator.hook_selected_packages();
        //select all packages in collection
        $(".softwaregroups").click(function() {
          if ($(this).attr("checked") === true) {
            $(this).parent().siblings("ul").find("input[type='checkbox']").attr("checked","checked");
          } else {
            $(this).parent().siblings("ul").find("input[type='checkbox']").removeAttr("checked");
          }
        });
      });
    });
    Aggregator.hook_selected_packages();
  });

.grid_16
  %h4 Managed Content Selection

  - form_tag :action => "dispatch" do
    - unless @embed
      = render :partial => 'hidden_fields'
    - @packages.each do |p|
      <input type="hidden" id="selected_package_#{p[:name]}" name="selected_packages[]" value="#{p[:name]}" />
    %fieldset.clearfix
      .search.grid_4.alpha
        %input{:type => "search", :placeholder => "Search for package", :name => 'package_search', :value => params[:package_search]}
        %button.action
      .grid_8
      %a.grid_4.omega Advanced Search

    %ul.metagroups{:class => 'packagegroupsidebar grid_4 alpha'}
      %li
        = submit_tag 'Collections', :name => 'show_metagroup', :id => 'collections', :class => 'icon'
      - @metagroups.keys.sort.each do |cat|
        %li
          = submit_tag cat, :name => "show_metagroup", :class => 'icon'
    #metagrouppackages.grid_12.omega.gap
      - if @collections
        = render :partial => 'collections'
      - elsif @searched_packages
        = render :partial => 'searched_packages'
      - else
        = render :partial => 'metagroup_packages'
